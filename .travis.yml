#=========================================================================
# TravisCI Setup
#=========================================================================

#------------------------------------------------------------------------
# language and build matrix
#------------------------------------------------------------------------

dist: xenial
language: python

python:
 - "3.7"

env:
 - CONFIG="-v --tb=short"

#------------------------------------------------------------------------
# install dependencies
#------------------------------------------------------------------------

install:

 # Install packages
 - sudo apt-get install -y graphviz

 # Install verilator
 - wget https://github.com/cornell-brg/verilator-travisci-cache/raw/master/verilator-travis-4.008.tar.gz
 - tar -C ${HOME} -xzf verilator-travis-4.008.tar.gz
 - export VERILATOR_ROOT=${HOME}/verilator
 - export PATH=${VERILATOR_ROOT}/bin:${PATH}
 - export PYMTL_VERILATOR_INCLUDE_DIR=${VERILATOR_ROOT}/share/verilator/include
 - verilator --version

 # Install PyMTL3
 - pip install --requirement requirements.txt --constraint constraints.txt
 - pip list

#------------------------------------------------------------------------
# test runner
#------------------------------------------------------------------------

script:
 # We don't apply any format tools for now.
 # - futurize --write --stage1 ./pymtl3 &> /dev/null
 # - autoflake --in-place --remove-duplicate-keys .
 # - pyupgrade --keep-percent-format $(find . -name '*.py')
 # - isort --apply --recursive ./pymtl3
 # - flake8 --select=F --ignore=F401,F405,F403,F811,F821,F841
 # - git diff --exit-code
 # - python --version | grep "Python 3" && futurize --write --stage2 ./pymtl3 &> /dev/null || true
 - mkdir -p build
 - cd build
 - git checkout cifer
 - py.test ../blocking_cache/test/BlockingCacheRTL_test.py $CONFIG
 - py.test ../blocking_cache/test/BlockingCacheRTL_test.py --test-verilog zeros $CONFIG
 - py.test ../blocking_cache/test/BlockingCacheRTL_test.py --test-verilog ones $CONFIG
 - py.test ../blocking_cache/test/BlockingCacheRTL_test.py --test-verilog rand $CONFIG

#-------------------------------------------------------------------------
# after success
#-------------------------------------------------------------------------
